version: "3.9"

services:
  db:
    image: postgres:13.0-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pg_data_flask:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: alstacon/skypro_film
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -sS http://172.0.0.1:5000/ping/ || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  front:
    build:
      context: .
      dockerfile: Dockerfile_front
    image: alstacon/skypro_film_front
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy

volumes:
  pg_data_flask: